.TH "Configure Topology Detection" 3 "9 Oct 2009" "Version 0.9.1rc1" "Hardware Locality (hwloc)" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Configure Topology Detection \- 
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBhwloc_topology_flags_e\fP { \fBHWLOC_TOPOLOGY_FLAG_WHOLE_SYSTEM\fP =  (1<<0), \fBHWLOC_TOPOLOGY_FLAG_IS_THISSYSTEM\fP =  (1<<1) }"
.br
.RI "\fIFlags to be set onto a topology context before load. \fP"
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "int \fBhwloc_topology_ignore_type\fP (\fBhwloc_topology_t\fP topology, \fBhwloc_obj_type_t\fP type)"
.br
.RI "\fIIgnore an object type. \fP"
.ti -1c
.RI "int \fBhwloc_topology_ignore_type_keep_structure\fP (\fBhwloc_topology_t\fP topology, \fBhwloc_obj_type_t\fP type)"
.br
.RI "\fIIgnore an object type if it does not bring any structure. \fP"
.ti -1c
.RI "int \fBhwloc_topology_ignore_all_keep_structure\fP (\fBhwloc_topology_t\fP topology)"
.br
.RI "\fIIgnore all objects that do not bring any structure. \fP"
.ti -1c
.RI "int \fBhwloc_topology_set_flags\fP (\fBhwloc_topology_t\fP topology, unsigned long flags)"
.br
.RI "\fISet OR'ed flags to non-yet-loaded topology. \fP"
.ti -1c
.RI "int \fBhwloc_topology_set_fsroot\fP (\fBhwloc_topology_t\fP restrict topology, const char *restrict fsroot_path)"
.br
.RI "\fIChange the file-system root path when building the topology from sysfs/procfs. \fP"
.ti -1c
.RI "int \fBhwloc_topology_set_synthetic\fP (\fBhwloc_topology_t\fP restrict topology, const char *restrict description)"
.br
.RI "\fIEnable synthetic topology. \fP"
.ti -1c
.RI "int \fBhwloc_topology_set_xml\fP (\fBhwloc_topology_t\fP restrict topology, const char *restrict xmlpath)"
.br
.RI "\fIEnable XML-file based topology. \fP"
.in -1c
.SH "Detailed Description"
.PP 
These functions can optionally be called between \fBhwloc_topology_init()\fP and \fBhwloc_topology_load()\fP to configure how the detection should be performed, e.g. to ignore some objects types, define a synthetic topology, etc.
.PP
If none of them is called, the default is to detect all the objects of the machine that the caller is allowed to access. 
.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBhwloc_topology_flags_e\fP"
.PP
Flags to be set onto a topology context before load. 
.PP
Flags should be given to \fBhwloc_topology_set_flags()\fP. 
.PP
\fBEnumerator: \fP
.in +1c
.TP
\fB\fIHWLOC_TOPOLOGY_FLAG_WHOLE_SYSTEM \fP\fP
.TP
\fB\fIHWLOC_TOPOLOGY_FLAG_IS_THISSYSTEM \fP\fP

.SH "Function Documentation"
.PP 
.SS "int hwloc_topology_ignore_all_keep_structure (\fBhwloc_topology_t\fP topology)"
.PP
Ignore all objects that do not bring any structure. 
.PP
Ignore all objects that do not bring any structure: Each ignored object should have a single children or be the only child of its father. 
.SS "int hwloc_topology_ignore_type (\fBhwloc_topology_t\fP topology, \fBhwloc_obj_type_t\fP type)"
.PP
Ignore an object type. 
.PP
Ignore all objects from the given type. The top-level type HWLOC_OBJ_SYSTEM and bottom-level type HWLOC_OBJ_PROC may not be ignored. 
.SS "int hwloc_topology_ignore_type_keep_structure (\fBhwloc_topology_t\fP topology, \fBhwloc_obj_type_t\fP type)"
.PP
Ignore an object type if it does not bring any structure. 
.PP
Ignore all objects from the given type as long as they do not bring any structure: Each ignored object should have a single children or be the only child of its father. The top-level type HWLOC_OBJ_SYSTEM and bottom-level type HWLOC_OBJ_PROC may not be ignored. 
.SS "int hwloc_topology_set_flags (\fBhwloc_topology_t\fP topology, unsigned long flags)"
.PP
Set OR'ed flags to non-yet-loaded topology. 
.PP
Set a OR'ed set of hwloc_topology_flags_e onto a topology that was not yet loaded. 
.SS "int hwloc_topology_set_fsroot (\fBhwloc_topology_t\fP restrict topology, const char *restrict fsroot_path)"
.PP
Change the file-system root path when building the topology from sysfs/procfs. 
.PP
On Linux system, use sysfs and procfs files as if they were mounted on the given \fCfsroot_path\fP instead of the main file-system root. Not using the main file-system root causes hwloc_topology_is_thissystem field to return 0.
.PP
\fBNote:\fP
.RS 4
For conveniency, this backend provides empty binding hooks which just return success. To have hwloc still actually call OS-specific hooks, the HWLOC_TOPOLOGY_FLAG_IS_THISSYSTEM has to be set to assert that the loaded file is really the underlying system. 
.RE
.PP

.SS "int hwloc_topology_set_synthetic (\fBhwloc_topology_t\fP restrict topology, const char *restrict description)"
.PP
Enable synthetic topology. 
.PP
Gather topology information from the given \fCdescription\fP which should be a comma separated string of numbers describing the arity of each level. Each number may be prefixed with a type and a colon to enforce the type of a level.
.PP
\fBNote:\fP
.RS 4
For conveniency, this backend provides empty binding hooks which just return success. 
.RE
.PP

.SS "int hwloc_topology_set_xml (\fBhwloc_topology_t\fP restrict topology, const char *restrict xmlpath)"
.PP
Enable XML-file based topology. 
.PP
Gather topology information the XML file given at \fCxmlpath\fP. This file may have been generated earlier with lstopo file.xml.
.PP
\fBNote:\fP
.RS 4
For conveniency, this backend provides empty binding hooks which just return success. To have hwloc still actually call OS-specific hooks, the HWLOC_TOPOLOGY_FLAG_IS_THISSYSTEM has to be set to assert that the loaded file is really the underlying system. 
.RE
.PP

.SH "Author"
.PP 
Generated automatically by Doxygen for Hardware Locality (hwloc) from the source code.
