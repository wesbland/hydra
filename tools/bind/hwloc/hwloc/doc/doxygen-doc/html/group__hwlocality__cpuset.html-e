<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
<title>Hardware Locality (hwloc): The Cpuset API</title>
<link href="tabs.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.5.9 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.html"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.html"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="modules.html"><span>Modules</span></a></li>
      <li><a href="annotated.html"><span>Data&nbsp;Structures</span></a></li>
      <li><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
</div>
<div class="contents">
<h1>The Cpuset API</h1><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Defines</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__cpuset.html#g8f896ce703ad1740fdf9ce8ac6361359">hwloc_cpuset_foreach_begin</a>(cpu, set)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Loop macro iterating on CPU set <code>set</code>.  <a href="#g8f896ce703ad1740fdf9ce8ac6361359"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">#define&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__cpuset.html#ge2974be78a7d7cddbd38cb23fcc6240a">hwloc_cpuset_foreach_end</a>()&nbsp;&nbsp;&nbsp;}</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">End of loop.  <a href="#ge2974be78a7d7cddbd38cb23fcc6240a"></a><br></td></tr>
<tr><td colspan="2"><br><h2>Typedefs</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">typedef struct <br class="typebreak">
hwloc_opaque_cpuset_s *&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a></td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set of CPUs represented as an opaque pointer to an internal bitmask.  <a href="#g82e51d695c430832b703dad5ab8d75e4"></a><br></td></tr>
<tr><td colspan="2"><br><h2>Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__cpuset.html#g82803256c7e78369aad77a2a9e5599a2">hwloc_cpuset_alloc</a> (void)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Allocate a new empty CPU set.  <a href="#g82803256c7e78369aad77a2a9e5599a2"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__cpuset.html#gf5d5a9e082a43f8311fdcff55e611b23">hwloc_cpuset_free</a> (<a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a> set)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Free CPU set <code>set</code>.  <a href="#gf5d5a9e082a43f8311fdcff55e611b23"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__cpuset.html#g19d8c163e4834ba69c808560aa5a89b3">hwloc_cpuset_dup</a> (<a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a> set)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Duplicate CPU set <code>set</code> by allocating a new CPU set and copying its contents.  <a href="#g19d8c163e4834ba69c808560aa5a89b3"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__cpuset.html#gdad3d25553afca090a81ffa270208f2e">hwloc_cpuset_copy</a> (<a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a> dst, <a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a> src)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Copy the contents of CPU set <code>src</code> into the already allocated CPU set <code>dst</code>.  <a href="#gdad3d25553afca090a81ffa270208f2e"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__cpuset.html#gaa64dfeea7ff3c8427c88ac285be714e">hwloc_cpuset_snprintf</a> (char *__hwloc_restrict buf, size_t buflen, <a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a> set)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Stringify a cpuset.  <a href="#gaa64dfeea7ff3c8427c88ac285be714e"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__cpuset.html#ge2ebb56edf26097a355f24d859c56713">hwloc_cpuset_asprintf</a> (char **strp, <a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a> set)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Stringify a cpuset into a newly allocated string.  <a href="#ge2ebb56edf26097a355f24d859c56713"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top"><a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a>&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__cpuset.html#g63e62db35640c1b90684952d7a3b5175">hwloc_cpuset_from_string</a> (const char *__hwloc_restrict string)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Parse a cpuset string.  <a href="#g63e62db35640c1b90684952d7a3b5175"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__cpuset.html#g4d63507128a35e6eda3fa6104970ac99">hwloc_cpuset_zero</a> (<a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a> set)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Primitives &amp; macros for building, modifying and consulting "sets" of cpus.  <a href="#g4d63507128a35e6eda3fa6104970ac99"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__cpuset.html#gd1a6c02ae378aff412c2b843cf8cc3f4">hwloc_cpuset_fill</a> (<a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a> set)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Fill CPU set <code>set</code>.  <a href="#gd1a6c02ae378aff412c2b843cf8cc3f4"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__cpuset.html#g1dbccf3bbf6e6ec0464bfd9e4d47e5cb">hwloc_cpuset_from_ulong</a> (<a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a> set, unsigned long mask)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Setup CPU set <code>set</code> from unsigned long <code>mask</code>.  <a href="#g1dbccf3bbf6e6ec0464bfd9e4d47e5cb"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__cpuset.html#ge681e6cd7486dbd03185a8760dc2fa5e">hwloc_cpuset_from_ith_ulong</a> (<a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a> set, int i, unsigned long mask)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Setup CPU set <code>set</code> from unsigned long <code>mask</code> used as <code>i</code> -th subset.  <a href="#ge681e6cd7486dbd03185a8760dc2fa5e"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned long&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__cpuset.html#g107de17ed191778705d959fa471a2504">hwloc_cpuset_to_ulong</a> (<a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a> set)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Convert the beginning part of CPU set <code>set</code> into unsigned long <code>mask</code>.  <a href="#g107de17ed191778705d959fa471a2504"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">unsigned long&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__cpuset.html#g509b2e92503092d3809c5fd71ecfceb9">hwloc_cpuset_to_ith_ulong</a> (<a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a> set, int i)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Convert the <code>i</code> -th subset of CPU set <code>set</code> into unsigned long mask.  <a href="#g509b2e92503092d3809c5fd71ecfceb9"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__cpuset.html#g212f2df54a64817dd094550a51b32c4f">hwloc_cpuset_cpu</a> (<a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a> set, unsigned cpu)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Clear CPU set <code>set</code> and set CPU <code>cpu</code>.  <a href="#g212f2df54a64817dd094550a51b32c4f"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__cpuset.html#gddd96b6d8b7d11e0891c7416e5a68598">hwloc_cpuset_all_but_cpu</a> (<a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a> set, unsigned cpu)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Clear CPU set <code>set</code> and set all but the CPU <code>cpu</code>.  <a href="#gddd96b6d8b7d11e0891c7416e5a68598"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__cpuset.html#gc5ba8c6d6367436995f67dbd4b3ba1de">hwloc_cpuset_set</a> (<a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a> set, unsigned cpu)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Add CPU <code>cpu</code> in CPU set <code>set</code>.  <a href="#gc5ba8c6d6367436995f67dbd4b3ba1de"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__cpuset.html#g9bcf94a6a5c877071116ff2f4a395956">hwloc_cpuset_set_range</a> (<a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a> set, unsigned begincpu, unsigned endcpu)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Add CPUs from <code>begincpu</code> to <code>endcpu</code> in CPU set <code>set</code>.  <a href="#g9bcf94a6a5c877071116ff2f4a395956"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__cpuset.html#g9ae6610a008402bf7959234bd2044a82">hwloc_cpuset_clr</a> (<a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a> set, unsigned cpu)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Remove CPU <code>cpu</code> from CPU set <code>set</code>.  <a href="#g9ae6610a008402bf7959234bd2044a82"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__cpuset.html#g70f87ccdc6f295206f2d0df32aa62348">hwloc_cpuset_isset</a> (<a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a> set, unsigned cpu)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Test whether CPU <code>cpu</code> is part of set <code>set</code>.  <a href="#g70f87ccdc6f295206f2d0df32aa62348"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__cpuset.html#g38796861f5b8282d7f2b3acef36bc309">hwloc_cpuset_iszero</a> (<a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a> set)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Test whether set <code>set</code> is zero.  <a href="#g38796861f5b8282d7f2b3acef36bc309"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__cpuset.html#g125297097b53bedec7919651ab83609e">hwloc_cpuset_isfull</a> (<a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a> set)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Test whether set <code>set</code> is full.  <a href="#g125297097b53bedec7919651ab83609e"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__cpuset.html#g15b36a71a420aab67d99fdaf44a022b1">hwloc_cpuset_isequal</a> (<a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a> set1, <a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a> set2)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Test whether set <code>set1</code> is equal to set <code>set2</code>.  <a href="#g15b36a71a420aab67d99fdaf44a022b1"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__cpuset.html#g009c89c43c86ece327df0ee4cf54f3a7">hwloc_cpuset_intersects</a> (<a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a> set1, <a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a> set2)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Test whether sets <code>set1</code> and <code>set2</code> intersects.  <a href="#g009c89c43c86ece327df0ee4cf54f3a7"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__cpuset.html#g82c079bdbed518fd175e71bac20223b1">hwloc_cpuset_isincluded</a> (<a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a> sub_set, <a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a> super_set)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Test whether set <code>sub_set</code> is part of set <code>super_set</code>.  <a href="#g82c079bdbed518fd175e71bac20223b1"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__cpuset.html#ga8fe567ba2d77e55d08823c121d19b93">hwloc_cpuset_orset</a> (<a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a> set, <a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a> modifier_set)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Or set <code>modifier_set</code> into set <code>set</code>.  <a href="#ga8fe567ba2d77e55d08823c121d19b93"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__cpuset.html#gbc1bfa0483f52c3ddb58530076faba07">hwloc_cpuset_andset</a> (<a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a> set, <a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a> modifier_set)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">And set <code>modifier_set</code> into set <code>set</code>.  <a href="#gbc1bfa0483f52c3ddb58530076faba07"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__cpuset.html#gfa939b045440ec9654cf58c2a497bfd0">hwloc_cpuset_clearset</a> (<a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a> set, <a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a> modifier_set)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Clear set <code>modifier_set</code> out of set <code>set</code>.  <a href="#gfa939b045440ec9654cf58c2a497bfd0"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__cpuset.html#ga79683934fe19784f17da38d16d14ec2">hwloc_cpuset_xorset</a> (<a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a> set, <a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a> modifier_set)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Xor set <code>set</code> with set <code>modifier_set</code>.  <a href="#ga79683934fe19784f17da38d16d14ec2"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__cpuset.html#g916c39218a447c7e2d2cabae004cf6fa">hwloc_cpuset_first</a> (<a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a> set)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Compute the first CPU (least significant bit) in CPU set <code>set</code>.  <a href="#g916c39218a447c7e2d2cabae004cf6fa"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__cpuset.html#g713e886fb6364e6440e911e1c58a7b62">hwloc_cpuset_last</a> (<a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a> set)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Compute the last CPU (most significant bit) in CPU set <code>set</code>.  <a href="#g713e886fb6364e6440e911e1c58a7b62"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">void&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__cpuset.html#g548a6620cce008fc5b1e2110d25135fe">hwloc_cpuset_singlify</a> (<a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a> set)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Keep a single CPU among those set in CPU set <code>set</code>.  <a href="#g548a6620cce008fc5b1e2110d25135fe"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__cpuset.html#g641ccf476257114e807bd74db0ca9cd0">hwloc_cpuset_compar_first</a> (<a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a> set1, <a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a> set2)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Compar CPU sets <code>set1</code> and <code>set2</code> using their first set bit.  <a href="#g641ccf476257114e807bd74db0ca9cd0"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__cpuset.html#ga72d138f3e7a4ea5de4cf7603ef436bf">hwloc_cpuset_compar</a> (<a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a> set1, <a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a> set2)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Compar CPU sets <code>set1</code> and <code>set2</code> using their last bits.  <a href="#ga72d138f3e7a4ea5de4cf7603ef436bf"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__cpuset.html#g84bda8f4363d5ed3e55ac0634c3bc5cc">hwloc_cpuset_weight</a> (<a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a> set)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Compute the weight of CPU set <code>set</code>.  <a href="#g84bda8f4363d5ed3e55ac0634c3bc5cc"></a><br></td></tr>
</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
For use in hwloc itself, a hwloc_cpuset_t represents a set of logical processors.<p>
<dl class="note" compact><dt><b>Note:</b></dt><dd>cpusets are indexed by OS logical processor number. </dd></dl>
<hr><h2>Define Documentation</h2>
<a class="anchor" name="g8f896ce703ad1740fdf9ce8ac6361359"></a><!-- doxytag: member="cpuset.h::hwloc_cpuset_foreach_begin" ref="g8f896ce703ad1740fdf9ce8ac6361359" args="(cpu, set)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define hwloc_cpuset_foreach_begin          </td>
          <td>(</td>
          <td class="paramtype">cpu,         <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">set&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
<b>Value:</b><div class="fragment"><pre class="fragment"><span class="keywordflow">for</span> (cpu = 0; cpu &lt; HWLOC_NBMAXCPUS; cpu++) \
                <span class="keywordflow">if</span> (<a class="code" href="group__hwlocality__cpuset.html#g70f87ccdc6f295206f2d0df32aa62348" title="Test whether CPU cpu is part of set set.">hwloc_cpuset_isset</a>(<span class="keyword">set</span>, cpu)) {
</pre></div>Loop macro iterating on CPU set <code>set</code>. 
<p>
It yields on each cpu that is member of the set. It uses variables <code>set</code> (the cpu set) and <code>cpu</code> (the loop variable) 
</div>
</div><p>
<a class="anchor" name="ge2974be78a7d7cddbd38cb23fcc6240a"></a><!-- doxytag: member="cpuset.h::hwloc_cpuset_foreach_end" ref="ge2974be78a7d7cddbd38cb23fcc6240a" args="()" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">#define hwloc_cpuset_foreach_end          </td>
          <td>(</td>
&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td>&nbsp;&nbsp;&nbsp;}</td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
End of loop. 
<p>
<dl class="see" compact><dt><b>See also:</b></dt><dd><a class="el" href="group__hwlocality__cpuset.html#g8f896ce703ad1740fdf9ce8ac6361359" title="Loop macro iterating on CPU set set.">hwloc_cpuset_foreach_begin</a> </dd></dl>

</div>
</div><p>
<hr><h2>Typedef Documentation</h2>
<a class="anchor" name="g82e51d695c430832b703dad5ab8d75e4"></a><!-- doxytag: member="cpuset.h::hwloc_cpuset_t" ref="g82e51d695c430832b703dad5ab8d75e4" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">typedef struct hwloc_opaque_cpuset_s* <a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set of CPUs represented as an opaque pointer to an internal bitmask. 
<p>

</div>
</div><p>
<hr><h2>Function Documentation</h2>
<a class="anchor" name="gddd96b6d8b7d11e0891c7416e5a68598"></a><!-- doxytag: member="cpuset.h::hwloc_cpuset_all_but_cpu" ref="gddd96b6d8b7d11e0891c7416e5a68598" args="(hwloc_cpuset_t set, unsigned cpu)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void hwloc_cpuset_all_but_cpu           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a>&nbsp;</td>
          <td class="paramname"> <em>set</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&nbsp;</td>
          <td class="paramname"> <em>cpu</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Clear CPU set <code>set</code> and set all but the CPU <code>cpu</code>. 
<p>

</div>
</div><p>
<a class="anchor" name="g82803256c7e78369aad77a2a9e5599a2"></a><!-- doxytag: member="cpuset.h::hwloc_cpuset_alloc" ref="g82803256c7e78369aad77a2a9e5599a2" args="(void)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a> hwloc_cpuset_alloc           </td>
          <td>(</td>
          <td class="paramtype">void&nbsp;</td>
          <td class="paramname">          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Allocate a new empty CPU set. 
<p>

</div>
</div><p>
<a class="anchor" name="gbc1bfa0483f52c3ddb58530076faba07"></a><!-- doxytag: member="cpuset.h::hwloc_cpuset_andset" ref="gbc1bfa0483f52c3ddb58530076faba07" args="(hwloc_cpuset_t set, hwloc_cpuset_t modifier_set)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void hwloc_cpuset_andset           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a>&nbsp;</td>
          <td class="paramname"> <em>set</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a>&nbsp;</td>
          <td class="paramname"> <em>modifier_set</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
And set <code>modifier_set</code> into set <code>set</code>. 
<p>

</div>
</div><p>
<a class="anchor" name="ge2ebb56edf26097a355f24d859c56713"></a><!-- doxytag: member="cpuset.h::hwloc_cpuset_asprintf" ref="ge2ebb56edf26097a355f24d859c56713" args="(char **strp, hwloc_cpuset_t set)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int hwloc_cpuset_asprintf           </td>
          <td>(</td>
          <td class="paramtype">char **&nbsp;</td>
          <td class="paramname"> <em>strp</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a>&nbsp;</td>
          <td class="paramname"> <em>set</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Stringify a cpuset into a newly allocated string. 
<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>the number of character that were actually written (not including the ending \0). </dd></dl>

</div>
</div><p>
<a class="anchor" name="gfa939b045440ec9654cf58c2a497bfd0"></a><!-- doxytag: member="cpuset.h::hwloc_cpuset_clearset" ref="gfa939b045440ec9654cf58c2a497bfd0" args="(hwloc_cpuset_t set, hwloc_cpuset_t modifier_set)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void hwloc_cpuset_clearset           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a>&nbsp;</td>
          <td class="paramname"> <em>set</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a>&nbsp;</td>
          <td class="paramname"> <em>modifier_set</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Clear set <code>modifier_set</code> out of set <code>set</code>. 
<p>

</div>
</div><p>
<a class="anchor" name="g9ae6610a008402bf7959234bd2044a82"></a><!-- doxytag: member="cpuset.h::hwloc_cpuset_clr" ref="g9ae6610a008402bf7959234bd2044a82" args="(hwloc_cpuset_t set, unsigned cpu)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void hwloc_cpuset_clr           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a>&nbsp;</td>
          <td class="paramname"> <em>set</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&nbsp;</td>
          <td class="paramname"> <em>cpu</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Remove CPU <code>cpu</code> from CPU set <code>set</code>. 
<p>

</div>
</div><p>
<a class="anchor" name="ga72d138f3e7a4ea5de4cf7603ef436bf"></a><!-- doxytag: member="cpuset.h::hwloc_cpuset_compar" ref="ga72d138f3e7a4ea5de4cf7603ef436bf" args="(hwloc_cpuset_t set1, hwloc_cpuset_t set2)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int hwloc_cpuset_compar           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a>&nbsp;</td>
          <td class="paramname"> <em>set1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a>&nbsp;</td>
          <td class="paramname"> <em>set2</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Compar CPU sets <code>set1</code> and <code>set2</code> using their last bits. 
<p>
Higher most significant bit is higher. The empty CPU set is considered lower than anything. 
</div>
</div><p>
<a class="anchor" name="g641ccf476257114e807bd74db0ca9cd0"></a><!-- doxytag: member="cpuset.h::hwloc_cpuset_compar_first" ref="g641ccf476257114e807bd74db0ca9cd0" args="(hwloc_cpuset_t set1, hwloc_cpuset_t set2)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int hwloc_cpuset_compar_first           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a>&nbsp;</td>
          <td class="paramname"> <em>set1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a>&nbsp;</td>
          <td class="paramname"> <em>set2</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Compar CPU sets <code>set1</code> and <code>set2</code> using their first set bit. 
<p>
Smaller least significant bit is smaller. The empty CPU set is considered higher than anything. 
</div>
</div><p>
<a class="anchor" name="gdad3d25553afca090a81ffa270208f2e"></a><!-- doxytag: member="cpuset.h::hwloc_cpuset_copy" ref="gdad3d25553afca090a81ffa270208f2e" args="(hwloc_cpuset_t dst, hwloc_cpuset_t src)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void hwloc_cpuset_copy           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a>&nbsp;</td>
          <td class="paramname"> <em>dst</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a>&nbsp;</td>
          <td class="paramname"> <em>src</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Copy the contents of CPU set <code>src</code> into the already allocated CPU set <code>dst</code>. 
<p>

</div>
</div><p>
<a class="anchor" name="g212f2df54a64817dd094550a51b32c4f"></a><!-- doxytag: member="cpuset.h::hwloc_cpuset_cpu" ref="g212f2df54a64817dd094550a51b32c4f" args="(hwloc_cpuset_t set, unsigned cpu)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void hwloc_cpuset_cpu           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a>&nbsp;</td>
          <td class="paramname"> <em>set</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&nbsp;</td>
          <td class="paramname"> <em>cpu</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Clear CPU set <code>set</code> and set CPU <code>cpu</code>. 
<p>

</div>
</div><p>
<a class="anchor" name="g19d8c163e4834ba69c808560aa5a89b3"></a><!-- doxytag: member="cpuset.h::hwloc_cpuset_dup" ref="g19d8c163e4834ba69c808560aa5a89b3" args="(hwloc_cpuset_t set)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a> hwloc_cpuset_dup           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a>&nbsp;</td>
          <td class="paramname"> <em>set</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Duplicate CPU set <code>set</code> by allocating a new CPU set and copying its contents. 
<p>

</div>
</div><p>
<a class="anchor" name="gd1a6c02ae378aff412c2b843cf8cc3f4"></a><!-- doxytag: member="cpuset.h::hwloc_cpuset_fill" ref="gd1a6c02ae378aff412c2b843cf8cc3f4" args="(hwloc_cpuset_t set)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void hwloc_cpuset_fill           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a>&nbsp;</td>
          <td class="paramname"> <em>set</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Fill CPU set <code>set</code>. 
<p>

</div>
</div><p>
<a class="anchor" name="g916c39218a447c7e2d2cabae004cf6fa"></a><!-- doxytag: member="cpuset.h::hwloc_cpuset_first" ref="g916c39218a447c7e2d2cabae004cf6fa" args="(hwloc_cpuset_t set)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int hwloc_cpuset_first           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a>&nbsp;</td>
          <td class="paramname"> <em>set</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Compute the first CPU (least significant bit) in CPU set <code>set</code>. 
<p>

</div>
</div><p>
<a class="anchor" name="gf5d5a9e082a43f8311fdcff55e611b23"></a><!-- doxytag: member="cpuset.h::hwloc_cpuset_free" ref="gf5d5a9e082a43f8311fdcff55e611b23" args="(hwloc_cpuset_t set)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void hwloc_cpuset_free           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a>&nbsp;</td>
          <td class="paramname"> <em>set</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Free CPU set <code>set</code>. 
<p>

</div>
</div><p>
<a class="anchor" name="ge681e6cd7486dbd03185a8760dc2fa5e"></a><!-- doxytag: member="cpuset.h::hwloc_cpuset_from_ith_ulong" ref="ge681e6cd7486dbd03185a8760dc2fa5e" args="(hwloc_cpuset_t set, int i, unsigned long mask)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void hwloc_cpuset_from_ith_ulong           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a>&nbsp;</td>
          <td class="paramname"> <em>set</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>i</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned long&nbsp;</td>
          <td class="paramname"> <em>mask</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Setup CPU set <code>set</code> from unsigned long <code>mask</code> used as <code>i</code> -th subset. 
<p>

</div>
</div><p>
<a class="anchor" name="g63e62db35640c1b90684952d7a3b5175"></a><!-- doxytag: member="cpuset.h::hwloc_cpuset_from_string" ref="g63e62db35640c1b90684952d7a3b5175" args="(const char *__hwloc_restrict string)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname"><a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a> hwloc_cpuset_from_string           </td>
          <td>(</td>
          <td class="paramtype">const char *__hwloc_restrict&nbsp;</td>
          <td class="paramname"> <em>string</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Parse a cpuset string. 
<p>
Must start and end with a digit. 
</div>
</div><p>
<a class="anchor" name="g1dbccf3bbf6e6ec0464bfd9e4d47e5cb"></a><!-- doxytag: member="cpuset.h::hwloc_cpuset_from_ulong" ref="g1dbccf3bbf6e6ec0464bfd9e4d47e5cb" args="(hwloc_cpuset_t set, unsigned long mask)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void hwloc_cpuset_from_ulong           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a>&nbsp;</td>
          <td class="paramname"> <em>set</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned long&nbsp;</td>
          <td class="paramname"> <em>mask</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Setup CPU set <code>set</code> from unsigned long <code>mask</code>. 
<p>

</div>
</div><p>
<a class="anchor" name="g009c89c43c86ece327df0ee4cf54f3a7"></a><!-- doxytag: member="cpuset.h::hwloc_cpuset_intersects" ref="g009c89c43c86ece327df0ee4cf54f3a7" args="(hwloc_cpuset_t set1, hwloc_cpuset_t set2)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int hwloc_cpuset_intersects           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a>&nbsp;</td>
          <td class="paramname"> <em>set1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a>&nbsp;</td>
          <td class="paramname"> <em>set2</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Test whether sets <code>set1</code> and <code>set2</code> intersects. 
<p>

</div>
</div><p>
<a class="anchor" name="g15b36a71a420aab67d99fdaf44a022b1"></a><!-- doxytag: member="cpuset.h::hwloc_cpuset_isequal" ref="g15b36a71a420aab67d99fdaf44a022b1" args="(hwloc_cpuset_t set1, hwloc_cpuset_t set2)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int hwloc_cpuset_isequal           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a>&nbsp;</td>
          <td class="paramname"> <em>set1</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a>&nbsp;</td>
          <td class="paramname"> <em>set2</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Test whether set <code>set1</code> is equal to set <code>set2</code>. 
<p>

</div>
</div><p>
<a class="anchor" name="g125297097b53bedec7919651ab83609e"></a><!-- doxytag: member="cpuset.h::hwloc_cpuset_isfull" ref="g125297097b53bedec7919651ab83609e" args="(hwloc_cpuset_t set)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int hwloc_cpuset_isfull           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a>&nbsp;</td>
          <td class="paramname"> <em>set</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Test whether set <code>set</code> is full. 
<p>

</div>
</div><p>
<a class="anchor" name="g82c079bdbed518fd175e71bac20223b1"></a><!-- doxytag: member="cpuset.h::hwloc_cpuset_isincluded" ref="g82c079bdbed518fd175e71bac20223b1" args="(hwloc_cpuset_t sub_set, hwloc_cpuset_t super_set)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int hwloc_cpuset_isincluded           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a>&nbsp;</td>
          <td class="paramname"> <em>sub_set</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a>&nbsp;</td>
          <td class="paramname"> <em>super_set</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Test whether set <code>sub_set</code> is part of set <code>super_set</code>. 
<p>

</div>
</div><p>
<a class="anchor" name="g70f87ccdc6f295206f2d0df32aa62348"></a><!-- doxytag: member="cpuset.h::hwloc_cpuset_isset" ref="g70f87ccdc6f295206f2d0df32aa62348" args="(hwloc_cpuset_t set, unsigned cpu)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int hwloc_cpuset_isset           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a>&nbsp;</td>
          <td class="paramname"> <em>set</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&nbsp;</td>
          <td class="paramname"> <em>cpu</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Test whether CPU <code>cpu</code> is part of set <code>set</code>. 
<p>

</div>
</div><p>
<a class="anchor" name="g38796861f5b8282d7f2b3acef36bc309"></a><!-- doxytag: member="cpuset.h::hwloc_cpuset_iszero" ref="g38796861f5b8282d7f2b3acef36bc309" args="(hwloc_cpuset_t set)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int hwloc_cpuset_iszero           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a>&nbsp;</td>
          <td class="paramname"> <em>set</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Test whether set <code>set</code> is zero. 
<p>

</div>
</div><p>
<a class="anchor" name="g713e886fb6364e6440e911e1c58a7b62"></a><!-- doxytag: member="cpuset.h::hwloc_cpuset_last" ref="g713e886fb6364e6440e911e1c58a7b62" args="(hwloc_cpuset_t set)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int hwloc_cpuset_last           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a>&nbsp;</td>
          <td class="paramname"> <em>set</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Compute the last CPU (most significant bit) in CPU set <code>set</code>. 
<p>

</div>
</div><p>
<a class="anchor" name="ga8fe567ba2d77e55d08823c121d19b93"></a><!-- doxytag: member="cpuset.h::hwloc_cpuset_orset" ref="ga8fe567ba2d77e55d08823c121d19b93" args="(hwloc_cpuset_t set, hwloc_cpuset_t modifier_set)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void hwloc_cpuset_orset           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a>&nbsp;</td>
          <td class="paramname"> <em>set</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a>&nbsp;</td>
          <td class="paramname"> <em>modifier_set</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Or set <code>modifier_set</code> into set <code>set</code>. 
<p>

</div>
</div><p>
<a class="anchor" name="gc5ba8c6d6367436995f67dbd4b3ba1de"></a><!-- doxytag: member="cpuset.h::hwloc_cpuset_set" ref="gc5ba8c6d6367436995f67dbd4b3ba1de" args="(hwloc_cpuset_t set, unsigned cpu)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void hwloc_cpuset_set           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a>&nbsp;</td>
          <td class="paramname"> <em>set</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&nbsp;</td>
          <td class="paramname"> <em>cpu</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Add CPU <code>cpu</code> in CPU set <code>set</code>. 
<p>

</div>
</div><p>
<a class="anchor" name="g9bcf94a6a5c877071116ff2f4a395956"></a><!-- doxytag: member="cpuset.h::hwloc_cpuset_set_range" ref="g9bcf94a6a5c877071116ff2f4a395956" args="(hwloc_cpuset_t set, unsigned begincpu, unsigned endcpu)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void hwloc_cpuset_set_range           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a>&nbsp;</td>
          <td class="paramname"> <em>set</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&nbsp;</td>
          <td class="paramname"> <em>begincpu</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned&nbsp;</td>
          <td class="paramname"> <em>endcpu</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Add CPUs from <code>begincpu</code> to <code>endcpu</code> in CPU set <code>set</code>. 
<p>

</div>
</div><p>
<a class="anchor" name="g548a6620cce008fc5b1e2110d25135fe"></a><!-- doxytag: member="cpuset.h::hwloc_cpuset_singlify" ref="g548a6620cce008fc5b1e2110d25135fe" args="(hwloc_cpuset_t set)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void hwloc_cpuset_singlify           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a>&nbsp;</td>
          <td class="paramname"> <em>set</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Keep a single CPU among those set in CPU set <code>set</code>. 
<p>
Might be used before binding so that the process does not have a chance of migrating between multiple logical CPUs in the original mask. 
</div>
</div><p>
<a class="anchor" name="gaa64dfeea7ff3c8427c88ac285be714e"></a><!-- doxytag: member="cpuset.h::hwloc_cpuset_snprintf" ref="gaa64dfeea7ff3c8427c88ac285be714e" args="(char *__hwloc_restrict buf, size_t buflen, hwloc_cpuset_t set)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int hwloc_cpuset_snprintf           </td>
          <td>(</td>
          <td class="paramtype">char *__hwloc_restrict&nbsp;</td>
          <td class="paramname"> <em>buf</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">size_t&nbsp;</td>
          <td class="paramname"> <em>buflen</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a>&nbsp;</td>
          <td class="paramname"> <em>set</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Stringify a cpuset. 
<p>
Up to <code>buflen</code> characters may be written in buffer <code>buf</code>.<p>
<dl class="return" compact><dt><b>Returns:</b></dt><dd>the number of character that were actually written if not truncating, or that would have been written (not including the ending \0). </dd></dl>

</div>
</div><p>
<a class="anchor" name="g509b2e92503092d3809c5fd71ecfceb9"></a><!-- doxytag: member="cpuset.h::hwloc_cpuset_to_ith_ulong" ref="g509b2e92503092d3809c5fd71ecfceb9" args="(hwloc_cpuset_t set, int i)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned long hwloc_cpuset_to_ith_ulong           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a>&nbsp;</td>
          <td class="paramname"> <em>set</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">int&nbsp;</td>
          <td class="paramname"> <em>i</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Convert the <code>i</code> -th subset of CPU set <code>set</code> into unsigned long mask. 
<p>

</div>
</div><p>
<a class="anchor" name="g107de17ed191778705d959fa471a2504"></a><!-- doxytag: member="cpuset.h::hwloc_cpuset_to_ulong" ref="g107de17ed191778705d959fa471a2504" args="(hwloc_cpuset_t set)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">unsigned long hwloc_cpuset_to_ulong           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a>&nbsp;</td>
          <td class="paramname"> <em>set</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Convert the beginning part of CPU set <code>set</code> into unsigned long <code>mask</code>. 
<p>

</div>
</div><p>
<a class="anchor" name="g84bda8f4363d5ed3e55ac0634c3bc5cc"></a><!-- doxytag: member="cpuset.h::hwloc_cpuset_weight" ref="g84bda8f4363d5ed3e55ac0634c3bc5cc" args="(hwloc_cpuset_t set)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int hwloc_cpuset_weight           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a>&nbsp;</td>
          <td class="paramname"> <em>set</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Compute the weight of CPU set <code>set</code>. 
<p>

</div>
</div><p>
<a class="anchor" name="ga79683934fe19784f17da38d16d14ec2"></a><!-- doxytag: member="cpuset.h::hwloc_cpuset_xorset" ref="ga79683934fe19784f17da38d16d14ec2" args="(hwloc_cpuset_t set, hwloc_cpuset_t modifier_set)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void hwloc_cpuset_xorset           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a>&nbsp;</td>
          <td class="paramname"> <em>set</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a>&nbsp;</td>
          <td class="paramname"> <em>modifier_set</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Xor set <code>set</code> with set <code>modifier_set</code>. 
<p>

</div>
</div><p>
<a class="anchor" name="g4d63507128a35e6eda3fa6104970ac99"></a><!-- doxytag: member="cpuset.h::hwloc_cpuset_zero" ref="g4d63507128a35e6eda3fa6104970ac99" args="(hwloc_cpuset_t set)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">void hwloc_cpuset_zero           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__hwlocality__cpuset.html#g82e51d695c430832b703dad5ab8d75e4">hwloc_cpuset_t</a>&nbsp;</td>
          <td class="paramname"> <em>set</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Primitives &amp; macros for building, modifying and consulting "sets" of cpus. 
<p>
Empty CPU set <code>set</code> 
</div>
</div><p>
</div>
<hr size="1"><address style="text-align: right;"><small>Generated on Fri Oct 9 15:27:29 2009 for Hardware Locality (hwloc) by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.9 </small></address>
</body>
</html>
