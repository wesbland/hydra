<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html><head><meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
<title>Hardware Locality (hwloc): Configure Topology Detection</title>
<link href="tabs.css" rel="stylesheet" type="text/css">
<link href="doxygen.css" rel="stylesheet" type="text/css">
</head><body>
<!-- Generated by Doxygen 1.5.9 -->
<div class="navigation" id="top">
  <div class="tabs">
    <ul>
      <li><a href="index.html"><span>Main&nbsp;Page</span></a></li>
      <li><a href="pages.html"><span>Related&nbsp;Pages</span></a></li>
      <li><a href="modules.html"><span>Modules</span></a></li>
      <li><a href="annotated.html"><span>Data&nbsp;Structures</span></a></li>
      <li><a href="files.html"><span>Files</span></a></li>
    </ul>
  </div>
</div>
<div class="contents">
<h1>Configure Topology Detection</h1><table border="0" cellpadding="0" cellspacing="0">
<tr><td></td></tr>
<tr><td colspan="2"><br><h2>Enumerations</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">enum &nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__configuration.html#gda025d3ec20b4b420f8038d23d6e7bde">hwloc_topology_flags_e</a> { <a class="el" href="group__hwlocality__configuration.html#ggda025d3ec20b4b420f8038d23d6e7bde129b4fea1300be22bbaf0bb0958994c8">HWLOC_TOPOLOGY_FLAG_WHOLE_SYSTEM</a> =  (1&lt;&lt;0), 
<a class="el" href="group__hwlocality__configuration.html#ggda025d3ec20b4b420f8038d23d6e7bde6ecb6abc6a0bb75e81564f8bca85783b">HWLOC_TOPOLOGY_FLAG_IS_THISSYSTEM</a> =  (1&lt;&lt;1)
 }</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Flags to be set onto a topology context before load.  <a href="group__hwlocality__configuration.html#gda025d3ec20b4b420f8038d23d6e7bde">More...</a><br></td></tr>
<tr><td colspan="2"><br><h2>Functions</h2></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__configuration.html#gfcf30842e8cb47b4c3dcaebecea31e17">hwloc_topology_ignore_type</a> (<a class="el" href="group__hwlocality__topology.html#g9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology, <a class="el" href="group__hwlocality__types.html#gcd37bb612667dc437d66bfb175a8dc55">hwloc_obj_type_t</a> type)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Ignore an object type.  <a href="#gfcf30842e8cb47b4c3dcaebecea31e17"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__configuration.html#g1f987bca941d6949faf7b1554dd7bc12">hwloc_topology_ignore_type_keep_structure</a> (<a class="el" href="group__hwlocality__topology.html#g9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology, <a class="el" href="group__hwlocality__types.html#gcd37bb612667dc437d66bfb175a8dc55">hwloc_obj_type_t</a> type)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Ignore an object type if it does not bring any structure.  <a href="#g1f987bca941d6949faf7b1554dd7bc12"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__configuration.html#g7c9cf147442d65d755c664ccde3bb3ef">hwloc_topology_ignore_all_keep_structure</a> (<a class="el" href="group__hwlocality__topology.html#g9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Ignore all objects that do not bring any structure.  <a href="#g7c9cf147442d65d755c664ccde3bb3ef"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__configuration.html#gaeed4df656979e5f16befea9d29b814b">hwloc_topology_set_flags</a> (<a class="el" href="group__hwlocality__topology.html#g9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> topology, unsigned long flags)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Set OR'ed flags to non-yet-loaded topology.  <a href="#gaeed4df656979e5f16befea9d29b814b"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__configuration.html#g45a6b5dd59be36879a64a7f73e0363c2">hwloc_topology_set_fsroot</a> (<a class="el" href="group__hwlocality__topology.html#g9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> __hwloc_restrict topology, const char *__hwloc_restrict fsroot_path)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Change the file-system root path when building the topology from sysfs/procfs.  <a href="#g45a6b5dd59be36879a64a7f73e0363c2"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__configuration.html#g5c11f6e454ebd5f4089670269e097a1e">hwloc_topology_set_synthetic</a> (<a class="el" href="group__hwlocality__topology.html#g9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> __hwloc_restrict topology, const char *__hwloc_restrict description)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Enable synthetic topology.  <a href="#g5c11f6e454ebd5f4089670269e097a1e"></a><br></td></tr>
<tr><td class="memItemLeft" nowrap align="right" valign="top">int&nbsp;</td><td class="memItemRight" valign="bottom"><a class="el" href="group__hwlocality__configuration.html#g29b8ebec1b85b324af18fdf5040806bf">hwloc_topology_set_xml</a> (<a class="el" href="group__hwlocality__topology.html#g9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> __hwloc_restrict topology, const char *__hwloc_restrict xmlpath)</td></tr>

<tr><td class="mdescLeft">&nbsp;</td><td class="mdescRight">Enable XML-file based topology.  <a href="#g29b8ebec1b85b324af18fdf5040806bf"></a><br></td></tr>
</table>
<hr><a name="_details"></a><h2>Detailed Description</h2>
These functions can optionally be called between <a class="el" href="group__hwlocality__creation.html#g03fd4a16d8b9ee1ffc32b25fd2f6bdfa" title="Allocate a topology context.">hwloc_topology_init()</a> and <a class="el" href="group__hwlocality__creation.html#gbdf58d87ad77f6615fccdfe0535ff826" title="Build the actual topology.">hwloc_topology_load()</a> to configure how the detection should be performed, e.g. to ignore some objects types, define a synthetic topology, etc.<p>
If none of them is called, the default is to detect all the objects of the machine that the caller is allowed to access. <hr><h2>Enumeration Type Documentation</h2>
<a class="anchor" name="gda025d3ec20b4b420f8038d23d6e7bde"></a><!-- doxytag: member="hwloc.h::hwloc_topology_flags_e" ref="gda025d3ec20b4b420f8038d23d6e7bde" args="" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">enum <a class="el" href="group__hwlocality__configuration.html#gda025d3ec20b4b420f8038d23d6e7bde">hwloc_topology_flags_e</a>          </td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Flags to be set onto a topology context before load. 
<p>
Flags should be given to <a class="el" href="group__hwlocality__configuration.html#gaeed4df656979e5f16befea9d29b814b" title="Set OR&#39;ed flags to non-yet-loaded topology.">hwloc_topology_set_flags()</a>. <dl compact><dt><b>Enumerator: </b></dt><dd>
<table border="0" cellspacing="2" cellpadding="0">
<tr><td valign="top"><em><a class="anchor" name="ggda025d3ec20b4b420f8038d23d6e7bde129b4fea1300be22bbaf0bb0958994c8"></a><!-- doxytag: member="HWLOC_TOPOLOGY_FLAG_WHOLE_SYSTEM" ref="ggda025d3ec20b4b420f8038d23d6e7bde129b4fea1300be22bbaf0bb0958994c8" args="" -->HWLOC_TOPOLOGY_FLAG_WHOLE_SYSTEM</em>&nbsp;</td><td>
</td></tr>
<tr><td valign="top"><em><a class="anchor" name="ggda025d3ec20b4b420f8038d23d6e7bde6ecb6abc6a0bb75e81564f8bca85783b"></a><!-- doxytag: member="HWLOC_TOPOLOGY_FLAG_IS_THISSYSTEM" ref="ggda025d3ec20b4b420f8038d23d6e7bde6ecb6abc6a0bb75e81564f8bca85783b" args="" -->HWLOC_TOPOLOGY_FLAG_IS_THISSYSTEM</em>&nbsp;</td><td>
</td></tr>
</table>
</dl>

</div>
</div><p>
<hr><h2>Function Documentation</h2>
<a class="anchor" name="g7c9cf147442d65d755c664ccde3bb3ef"></a><!-- doxytag: member="hwloc.h::hwloc_topology_ignore_all_keep_structure" ref="g7c9cf147442d65d755c664ccde3bb3ef" args="(hwloc_topology_t topology)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int hwloc_topology_ignore_all_keep_structure           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__hwlocality__topology.html#g9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a>&nbsp;</td>
          <td class="paramname"> <em>topology</em>          </td>
          <td>&nbsp;)&nbsp;</td>
          <td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Ignore all objects that do not bring any structure. 
<p>
Ignore all objects that do not bring any structure: Each ignored object should have a single children or be the only child of its father. 
</div>
</div><p>
<a class="anchor" name="gfcf30842e8cb47b4c3dcaebecea31e17"></a><!-- doxytag: member="hwloc.h::hwloc_topology_ignore_type" ref="gfcf30842e8cb47b4c3dcaebecea31e17" args="(hwloc_topology_t topology, hwloc_obj_type_t type)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int hwloc_topology_ignore_type           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__hwlocality__topology.html#g9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a>&nbsp;</td>
          <td class="paramname"> <em>topology</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__hwlocality__types.html#gcd37bb612667dc437d66bfb175a8dc55">hwloc_obj_type_t</a>&nbsp;</td>
          <td class="paramname"> <em>type</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Ignore an object type. 
<p>
Ignore all objects from the given type. The top-level type HWLOC_OBJ_SYSTEM and bottom-level type HWLOC_OBJ_PROC may not be ignored. 
</div>
</div><p>
<a class="anchor" name="g1f987bca941d6949faf7b1554dd7bc12"></a><!-- doxytag: member="hwloc.h::hwloc_topology_ignore_type_keep_structure" ref="g1f987bca941d6949faf7b1554dd7bc12" args="(hwloc_topology_t topology, hwloc_obj_type_t type)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int hwloc_topology_ignore_type_keep_structure           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__hwlocality__topology.html#g9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a>&nbsp;</td>
          <td class="paramname"> <em>topology</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype"><a class="el" href="group__hwlocality__types.html#gcd37bb612667dc437d66bfb175a8dc55">hwloc_obj_type_t</a>&nbsp;</td>
          <td class="paramname"> <em>type</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Ignore an object type if it does not bring any structure. 
<p>
Ignore all objects from the given type as long as they do not bring any structure: Each ignored object should have a single children or be the only child of its father. The top-level type HWLOC_OBJ_SYSTEM and bottom-level type HWLOC_OBJ_PROC may not be ignored. 
</div>
</div><p>
<a class="anchor" name="gaeed4df656979e5f16befea9d29b814b"></a><!-- doxytag: member="hwloc.h::hwloc_topology_set_flags" ref="gaeed4df656979e5f16befea9d29b814b" args="(hwloc_topology_t topology, unsigned long flags)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int hwloc_topology_set_flags           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__hwlocality__topology.html#g9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a>&nbsp;</td>
          <td class="paramname"> <em>topology</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">unsigned long&nbsp;</td>
          <td class="paramname"> <em>flags</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Set OR'ed flags to non-yet-loaded topology. 
<p>
Set a OR'ed set of hwloc_topology_flags_e onto a topology that was not yet loaded. 
</div>
</div><p>
<a class="anchor" name="g45a6b5dd59be36879a64a7f73e0363c2"></a><!-- doxytag: member="hwloc.h::hwloc_topology_set_fsroot" ref="g45a6b5dd59be36879a64a7f73e0363c2" args="(hwloc_topology_t __hwloc_restrict topology, const char *__hwloc_restrict fsroot_path)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int hwloc_topology_set_fsroot           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__hwlocality__topology.html#g9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> __hwloc_restrict&nbsp;</td>
          <td class="paramname"> <em>topology</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *__hwloc_restrict&nbsp;</td>
          <td class="paramname"> <em>fsroot_path</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Change the file-system root path when building the topology from sysfs/procfs. 
<p>
On Linux system, use sysfs and procfs files as if they were mounted on the given <code>fsroot_path</code> instead of the main file-system root. Not using the main file-system root causes hwloc_topology_is_thissystem field to return 0.<p>
<dl class="note" compact><dt><b>Note:</b></dt><dd>For conveniency, this backend provides empty binding hooks which just return success. To have hwloc still actually call OS-specific hooks, the HWLOC_TOPOLOGY_FLAG_IS_THISSYSTEM has to be set to assert that the loaded file is really the underlying system. </dd></dl>

</div>
</div><p>
<a class="anchor" name="g5c11f6e454ebd5f4089670269e097a1e"></a><!-- doxytag: member="hwloc.h::hwloc_topology_set_synthetic" ref="g5c11f6e454ebd5f4089670269e097a1e" args="(hwloc_topology_t __hwloc_restrict topology, const char *__hwloc_restrict description)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int hwloc_topology_set_synthetic           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__hwlocality__topology.html#g9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> __hwloc_restrict&nbsp;</td>
          <td class="paramname"> <em>topology</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *__hwloc_restrict&nbsp;</td>
          <td class="paramname"> <em>description</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Enable synthetic topology. 
<p>
Gather topology information from the given <code>description</code> which should be a comma separated string of numbers describing the arity of each level. Each number may be prefixed with a type and a colon to enforce the type of a level.<p>
<dl class="note" compact><dt><b>Note:</b></dt><dd>For conveniency, this backend provides empty binding hooks which just return success. </dd></dl>

</div>
</div><p>
<a class="anchor" name="g29b8ebec1b85b324af18fdf5040806bf"></a><!-- doxytag: member="hwloc.h::hwloc_topology_set_xml" ref="g29b8ebec1b85b324af18fdf5040806bf" args="(hwloc_topology_t __hwloc_restrict topology, const char *__hwloc_restrict xmlpath)" -->
<div class="memitem">
<div class="memproto">
      <table class="memname">
        <tr>
          <td class="memname">int hwloc_topology_set_xml           </td>
          <td>(</td>
          <td class="paramtype"><a class="el" href="group__hwlocality__topology.html#g9d1e76ee15a7dee158b786c30b6a6e38">hwloc_topology_t</a> __hwloc_restrict&nbsp;</td>
          <td class="paramname"> <em>topology</em>, </td>
        </tr>
        <tr>
          <td class="paramkey"></td>
          <td></td>
          <td class="paramtype">const char *__hwloc_restrict&nbsp;</td>
          <td class="paramname"> <em>xmlpath</em></td><td>&nbsp;</td>
        </tr>
        <tr>
          <td></td>
          <td>)</td>
          <td></td><td></td><td></td>
        </tr>
      </table>
</div>
<div class="memdoc">

<p>
Enable XML-file based topology. 
<p>
Gather topology information the XML file given at <code>xmlpath</code>. This file may have been generated earlier with lstopo file.xml.<p>
<dl class="note" compact><dt><b>Note:</b></dt><dd>For conveniency, this backend provides empty binding hooks which just return success. To have hwloc still actually call OS-specific hooks, the HWLOC_TOPOLOGY_FLAG_IS_THISSYSTEM has to be set to assert that the loaded file is really the underlying system. </dd></dl>

</div>
</div><p>
</div>
<hr size="1"><address style="text-align: right;"><small>Generated on Fri Oct 9 15:27:29 2009 for Hardware Locality (hwloc) by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img src="doxygen.png" alt="doxygen" align="middle" border="0"></a> 1.5.9 </small></address>
</body>
</html>
